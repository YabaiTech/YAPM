/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.14.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)

    implementation("io.github.cdimascio:dotenv-java:3.2.0")
    implementation("com.mysql:mysql-connector-j:8.0.33")
    implementation("org.xerial:sqlite-jdbc:3.50.1.0");

    // The following are
    // groupId:     com.formdev
    // artifactId:  flatlaf-intellij-themes
    // version:     3.6 (the current latest version)
    implementation("com.formdev:flatlaf:3.6")
    implementation("com.formdev:flatlaf-intellij-themes:3.6")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = "org.YAPM.App"
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    testLogging {
      events("failed", "skipped")
      showStandardStreams = true
    }
}

tasks.withType<AbstractTestTask> {
    afterSuite(
        KotlinClosure2({ desc: TestDescriptor, result: TestResult ->
            // Only execute on the outermost suite
            if (desc.parent == null) {
                println("\n **** Result: ${result.resultType} ****")
                println("  >    Tests: ${result.testCount}")
                println("  >   Passed: ${result.successfulTestCount}")
                println("  >   Failed: ${result.failedTestCount}")
                println("  >  Skipped: ${result.skippedTestCount}")
            }
        })
    )
}
